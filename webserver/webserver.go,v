head	1.5;
access;
symbols;
locks
	llonergan:1.5; strict;
comment	@# @;


1.5
date	2022.07.14.20.49.40;	author llonergan;	state Exp;
branches;
next	1.4;

1.4
date	2022.07.14.18.02.00;	author llonergan;	state Exp;
branches;
next	1.3;

1.3
date	2022.07.14.15.32.21;	author llonergan;	state Exp;
branches;
next	1.2;

1.2
date	2022.07.13.17.46.54;	author llonergan;	state Exp;
branches;
next	1.1;

1.1
date	2022.07.11.17.37.50;	author llonergan;	state Exp;
branches;
next	;


desc
@@


1.5
log
@.
@
text
@package webserver

import (
    "database/sql"
    "fmt"
    "github.com/notargets/api-tester/dbaccess"
    "io"
    "net/http"
    "strconv"
)

var (
    accessCount int
    db          *dbaccess.DB
)

func countAccess(w http.ResponseWriter, r *http.Request) {
    var (
        rows *sql.Rows
        err  error
    )
    accessCount++
    // stmt.Exec(accessCount, "count")
    db.Exec("UPDATE webtable SET a = " + strconv.Itoa(accessCount))
    rows = db.Query("SELECT a FROM webtable")
    var result int
    rows.Next()
    if err = rows.Scan(&result); err != nil {
        panic(err)
    }
    msg := fmt.Sprintf("Internal count: %d From DB: %d", accessCount, result)
    _, _ = io.WriteString(w, msg)
}

func Start(port int) {
    var err error
    dbaccess.CreateDatabase("mysql", "root", "root", "localhost", "apitest", 3306)
    db = dbaccess.NewDB("mysql", "root", "root", "localhost", "apitest", 3306)
    db.Exec(`CREATE TABLE webtable (a int, b text)`)
    db.Exec(`INSERT INTO webtable VALUES (0, "initial")`)
    mux := http.NewServeMux()

    mux.HandleFunc("/countAccess", countAccess)

    aport := strconv.Itoa(port)
    if err = http.ListenAndServe("localhost:"+aport, mux); err != nil {
        panic(err)
    }
}
@


1.4
log
@.
@
text
@d17 1
a17 1
func welcome(w http.ResponseWriter, r *http.Request) {
d43 1
a43 1
    mux.HandleFunc("/welcome", welcome)
@


1.3
log
@.
@
text
@d14 1
a14 2
    // stmt        *sql.Stmt
    db *dbaccess.DB
d31 1
a31 1
    msg := fmt.Sprintf("Internal count: %d From DB: %d\n", accessCount, result)
a40 1
    // stmt = db.Prepare("INSERT INTO webtable VALUES (?,?)")
@


1.2
log
@.
@
text
@d14 2
a15 2
    stmt        *sql.Stmt
    db          *dbaccess.DB
d19 4
d24 9
a32 2
    stmt.Exec(accessCount, "count")
    msg := fmt.Sprintf("Welcome! %d\n", accessCount)
d40 3
a42 2
    db.Exec("CREATE TABLE webtable (a int, b text)")
    stmt = db.Prepare("INSERT INTO webtable VALUES (?,?)")
@


1.1
log
@.
@
text
@d4 3
d12 6
d19 4
a22 1
    _, _ = io.WriteString(w, "Welcome!")
d27 4
@
